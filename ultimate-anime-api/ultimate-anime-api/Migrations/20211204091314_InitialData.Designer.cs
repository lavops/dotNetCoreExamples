// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ultimate_anime_api.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20211204091314_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Entities.Models.Anime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("AnimeId");

                    b.Property<int>("Episodes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StudioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudioId");

                    b.ToTable("Animes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("060c1a7f-509c-473c-937e-4f2e1b06f2b9"),
                            Episodes = 13,
                            Name = "Violet Evergarden",
                            ReleaseDate = new DateTime(2018, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = new Guid("edefae6b-643d-425d-82f5-5c62578dae9c")
                        },
                        new
                        {
                            Id = new Guid("8737ffe8-acd6-4412-be6c-a19c1ac51fa2"),
                            Episodes = 22,
                            Name = "Hyouka",
                            ReleaseDate = new DateTime(2012, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = new Guid("edefae6b-643d-425d-82f5-5c62578dae9c")
                        },
                        new
                        {
                            Id = new Guid("2510d138-3262-4b90-81e1-250fafcdcd13"),
                            Episodes = 22,
                            Name = "One Punch Man",
                            ReleaseDate = new DateTime(2015, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = new Guid("70a98b6c-7f0c-448a-bee4-35dd2bed9fae")
                        },
                        new
                        {
                            Id = new Guid("e6f66a13-940a-4ede-82a9-bda5ac1e6e5e"),
                            Episodes = 148,
                            Name = "Hunter x Hunter (2011)",
                            ReleaseDate = new DateTime(2011, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = new Guid("70a98b6c-7f0c-448a-bee4-35dd2bed9fae")
                        });
                });

            modelBuilder.Entity("Entities.Models.Studio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("StudioId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Studios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("edefae6b-643d-425d-82f5-5c62578dae9c"),
                            Address = "Tokyo",
                            Country = "Japan",
                            Name = "Kyoto Animation"
                        },
                        new
                        {
                            Id = new Guid("70a98b6c-7f0c-448a-bee4-35dd2bed9fae"),
                            Address = "Tokyo",
                            Country = "Japan",
                            Name = "Madhouse"
                        });
                });

            modelBuilder.Entity("Entities.Models.Anime", b =>
                {
                    b.HasOne("Entities.Models.Studio", "Studio")
                        .WithMany("Animes")
                        .HasForeignKey("StudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("Entities.Models.Studio", b =>
                {
                    b.Navigation("Animes");
                });
#pragma warning restore 612, 618
        }
    }
}
